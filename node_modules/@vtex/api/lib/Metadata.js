"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IODataSource_1 = require("./IODataSource");
const appId = process.env.VTEX_APP_ID;
const [runningAppName] = appId ? appId.split('@') : [''];
const routes = {
    Bucket: (bucket) => `/buckets/${runningAppName}/${bucket}`,
    Metadata: (bucket) => `${routes.Bucket(bucket)}/metadata`,
    MetadataKey: (bucket, key) => `${routes.Metadata(bucket)}/${key}`,
};
class Metadata extends IODataSource_1.IODataSource {
    constructor(context, options = {}) {
        super(context, options);
        this.service = 'router';
        this.httpClientFactory = IODataSource_1.forWorkspace;
        this.getBuckets = (bucket) => {
            return this.http.get(routes.Bucket(bucket));
        };
        this.list = (bucket, includeValue, limit, nextMarker) => {
            const query = { value: includeValue, _limit: 10 };
            if (limit && limit > 0) {
                query._limit = limit;
            }
            if (nextMarker) {
                query._marker = nextMarker;
            }
            return this.http.get(routes.Metadata(bucket), { params: query });
        };
        this.listAll = (bucket, includeValue) => {
            const query = { value: includeValue, _limit: 1000 };
            return this.http.get(routes.Metadata(bucket), { params: query });
        };
        this.get = (bucket, key) => {
            return this.http.get(routes.MetadataKey(bucket, key));
        };
        this.save = (bucket, key, data) => {
            return this.http.put(routes.MetadataKey(bucket, key), data);
        };
        this.saveAll = (bucket, data) => {
            return this.http.put(routes.Metadata(bucket), data);
        };
        this.delete = (bucket, key) => {
            return this.http.delete(routes.MetadataKey(bucket, key));
        };
        this.deleteAll = (bucket) => {
            return this.http.delete(routes.Metadata(bucket));
        };
        if (runningAppName === '') {
            throw new Error(`Invalid path to access Metadata. Variable VTEX_APP_ID is not available.`);
        }
    }
}
exports.Metadata = Metadata;
