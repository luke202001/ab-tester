export interface Metric {
    name: string;
    [key: string]: any;
}
interface GetStats {
    getStats(): {
        [key: string]: number | boolean | string | undefined;
    };
}
export declare class MetricsAccumulator {
    private metricsMillis;
    private devMetricsMillis;
    private cacheMap;
    private onFlushMetrics;
    private metricToAggregate;
    private devMetricToAggregate;
    constructor();
    batchHrTimeMetricFromEnd: (name: string, end: [number, number], production: boolean) => void;
    batchHrTimeMetric: (name: string, start: [number, number], production: boolean) => void;
    batchMetric: (name: string, timeMillis: number, production: boolean) => void;
    addOnFlushMetric: (metricFn: () => Metric | Metric[]) => void;
    trackCache: (name: string, cacheInstance: GetStats) => void;
    statusTrack: () => Metric[];
    private cacheToMetric;
    private flushMetrics;
}
export {};
